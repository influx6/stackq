0 info it worked if it ends with ok
1 verbose cli [ '/home/box/local/bin/node',
1 verbose cli   '/home/box/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.32
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/box/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/box/.npm/stacks/0.0.3/package.tgz', '.' ]
11 verbose tarball /home/box/.npm/stacks/0.0.3/package.tgz
12 verbose folder .
13 info prepublish stacks@0.0.3
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/box/.npm/1f1177db-tar.lock
16 silly lockFile eaf58008-box-npm-stacks-0-0-3-package-tgz tar:///home/box/.npm/stacks/0.0.3/package.tgz
17 verbose lock tar:///home/box/.npm/stacks/0.0.3/package.tgz /home/box/.npm/eaf58008-box-npm-stacks-0-0-3-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile eaf58008-box-npm-stacks-0-0-3-package-tgz tar:///home/box/.npm/stacks/0.0.3/package.tgz
21 silly lockFile eaf58008-box-npm-stacks-0-0-3-package-tgz tar:///home/box/.npm/stacks/0.0.3/package.tgz
22 silly lockFile 5ae369e1-ome-box-npm-stacks-0-0-3-package /home/box/.npm/stacks/0.0.3/package
23 verbose lock /home/box/.npm/stacks/0.0.3/package /home/box/.npm/5ae369e1-ome-box-npm-stacks-0-0-3-package.lock
24 silly lockFile 5ae369e1-ome-box-npm-stacks-0-0-3-package /home/box/.npm/stacks/0.0.3/package
25 silly lockFile 5ae369e1-ome-box-npm-stacks-0-0-3-package /home/box/.npm/stacks/0.0.3/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'stacks',
28 silly publish   version: '0.0.3',
28 silly publish   description: 'utility chain with classes,events,promises,etc',
28 silly publish   main: './stacks.js',
28 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
28 silly publish   keywords: [ 'as' ],
28 silly publish   repository: { type: 'git', url: 'http://github.com/influx6/stack' },
28 silly publish   author: { name: 'Alexander Ewetumo' },
28 silly publish   license: 'mit',
28 silly publish   gitHead: '1bbf53e3a35ab459e794a32483abd8bc95c05c42',
28 silly publish   bugs: { url: 'https://github.com/influx6/stack/issues' },
28 silly publish   readme: 'ERROR: No README data found!',
28 silly publish   homepage: 'https://github.com/influx6/stack',
28 silly publish   _id: 'stacks@0.0.3',
28 silly publish   _shasum: '9a148ede2d2cbf9005a5738eb2523818d6942c10',
28 silly publish   _from: '.' }
29 verbose request where is /stacks
30 verbose request registry https://registry.npmjs.org/
31 verbose request id c69f914d07a10297
32 verbose url raw /stacks
33 verbose url resolving [ 'https://registry.npmjs.org/', './stacks' ]
34 verbose url resolved https://registry.npmjs.org/stacks
35 verbose request where is https://registry.npmjs.org/stacks
36 info trying registry request attempt 1 at 18:28:24
37 http PUT https://registry.npmjs.org/stacks
38 http 403 https://registry.npmjs.org/stacks
39 verbose headers { date: 'Thu, 16 Oct 2014 17:28:42 GMT',
39 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
39 verbose headers   'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '7054',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   'x-served-by': 'cache-lcy1131-LCY',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1413480520.866538,VS0,VE1675',
39 verbose headers   'keep-alive': 'timeout=10, max=50',
39 verbose headers   connection: 'Keep-Alive' }
40 error publish Failed PUT 403
41 error Error: forbidden cannot modify pre-existing version: 0.0.3
41 error old={"name":"stacks","version":"0.0.3","description":"Simple, reliable request/reply-based distributed computing over TCP.","main":"index.js","scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/dscanlonpa/actors.git"},"keywords":["zeromq","erlang","parallel","distributed","computing","request","reply","async","redundant"],"author":{"name":"Dan Scanlon"},"license":"MIT","bugs":{"url":"https://github.com/dscanlonpa/actors/issues"},"dependencies":{"actorify":"~0.1.0","async":"~0.2.9","debug":"~0.7.4"},"devDependencies":{"mocha":"~1.14.0"},"readme":"stacks\u000a======\u000a\u000a Simple, reliable request/reply-based parallel computing over TCP.\u000a \u000a[![Build Status](https://travis-ci.org/dscanlonpa/stacks.png?branch=master)](https://travis-ci.org/dscanlonpa/stacks)\u000a \u000aWhat is stacks?\u000a---------------\u000a Stacks provides a simple request/reply interface to parallel computing.  It's simply a queue of requests that clients \u000a (seperate worker machines) reply to.  It's designed to be reliable and easy-to-use in situations involving long, compute-heavy requests.\u000a \u000aFeatures\u000a--------\u000a+ JSON, BSON, binary support – msgpack protocol\u000a+ Automatic round-robin scheduling\u000a+ Automatic rescheduling of failed requests\u000a+ Typed requests. `client.on(type, function(body, reply) { ...` interface\u000a+ Configurable per-request-type worker concurrency limits\u000a+ Supports zero or more client workers\u000a+ Automatically saves requests received when no worker is available, and schedules them when the next worker connects\u000a+ Automatically reschedules requests that were pending on clients that disconnect\u000a\u000aInstallation\u000a------------\u000a To begin using stacks, you must have at least node v0.10 or higher installed.\u000a \u000a Install from npm\u000a ```\u000a $ (sudo) npm install --save stacks\u000a ```\u000a \u000a And add it to your project\u000a ```javascript\u000a var stacks = require('stacks');\u000a ...\u000a ```\u000a\u000a* * *\u000a\u000amaking requests\u000a===============\u000aThe master node makes requests to stacks.  The requests are automatically handled by clients.\u000a```javascript\u000avar stacks = require('stacks');\u000a// Listen for clients on port 3000\u000astacks.listen(3000);\u000a\u000astacks.request('string reverse', 'hello', { maxRetries: 5 }, function (error, reversedString) {\u000a  if (error) {\u000a    console.error('Failed to reverse string after 5 retries. Error:', error);\u000a  } else {\u000a    console.log('Reversed string:', reversedString); // Reversed string: olleh\u000a  }\u000a});\u000a```\u000a\u000ahandling requests\u000a=================\u000a```javascript\u000avar stacks = require('stacks');\u000a// connect to stacks server\u000astacks.connect(3000, function(client) {\u000a\u000a  client.on('string reverse', function(string, reply) {\u000a    var reversedString = string.split(\"\").reverse().join(\"\");\u000a    var error = null;\u000a    reply(error, reversedString);\u000a  }, 15); // handle only 15 concurrent string reverse requests at a time\u000a  \u000a});\u000a```\u000a\u000a* * *\u000a\u000aServer API\u000a==========\u000a\u000a## listen(port, [callback])\u000aListen for client (worker) connections\u000a+ _Number_ `port`: Port to listen for client connections on\u000a+ _Function_ `callback`: Callback function invoked when stacks has begun listening. Takes no arguments\u000a\u000a## request(type, body, [options], callback)\u000aMake a request on stacks\u000a+ _String_ `type`: Type of request. Used in client interface to process/reply i.e., `client.on(type, function(body, reply) {...`\u000a+ _Mixed_ `body`: The request body that will be received by the client request worker. `WARNING: `Arrays will be parsed as arguments and cannot be sent as the top-level object in a request.\u000a+ _Object_ `options`: Request options. \u000a+ _Function_ `callback`: Callback function invoked when request completes (or fails after options.maxRetries). Takes arguments `error`, `response`.\u000a\u000a### request options\u000a+ _Number_ `maxRetries` (3): The maximum amount of retries to attempt before invoking request callback with `error`.  (These retries are rescheduled by stacks (round-robin if multiple clients are connected)).\u000a\u000aClient API\u000a==========\u000a\u000a## connect(server, callback)\u000aConnect to stacks server\u000a+ _Mixed_ `server`: If _Number_, server is interpreted as port. If _Object_, server must have the signature `{ host: '[host-ip-address]', port: 3000 }`\u000a+ _Function_ `callback`: Invoked after client is connected to stacks server. Takes argument `client`.\u000a\u000a## disconnect()\u000aDisconnect from stacks server\u000a\u000a## Client\u000aInstance methods of the client object passed to the #connect() callback.\u000a\u000a#### on(type, worker, [concurrency])\u000aHandle and reply to requests of type `type`\u000a+ _String_ `type`: Type of request to handle with `concurrency` concurrent `worker` functions\u000a+ _Function_ `worker`: Function that processes and replies to a request.  Takes arguments `body`– the request body –and `reply`– the reply function.\u000a+ _Number_ `concurrency` (1): Limit of concurrent `worker` functions to use for requests of type `type`.\u000a \u000aLicense\u000a=======\u000a \u000a MIT\u000a\u000a","readmeFilename":"README.md","_id":"stacks@0.0.3","dist":{"shasum":"7790ac6c8c75c95894984ed0aad4c25d370793bb","tarball":"http://registry.npmjs.org/stacks/-/stacks-0.0.3.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"danscan","email":"dscanlonpa@gmail.com"},"maintainers":[{"name":"danscan","email":"dscanlonpa@gmail.com"}]}
41 error new={"name":"stacks","version":"0.0.3","description":"utility chain with classes,events,promises,etc","main":"./stacks.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["as"],"repository":{"type":"git","url":"http://github.com/influx6/stack"},"author":{"name":"Alexander Ewetumo"},"license":"mit","gitHead":"1bbf53e3a35ab459e794a32483abd8bc95c05c42","bugs":{"url":"https://github.com/influx6/stack/issues"},"readme":"ERROR: No README data found!","homepage":"https://github.com/influx6/stack","_id":"stacks@0.0.3","_shasum":"9a148ede2d2cbf9005a5738eb2523818d6942c10","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"influx6","email":"trinoxf@gmail.com"},"maintainers":[{"name":"influx6","email":"trinoxf@gmail.com"}],"dist":{"shasum":"9a148ede2d2cbf9005a5738eb2523818d6942c10","tarball":"http://registry.npmjs.org/stacks/-/stacks-0.0.3.tgz"}}: stacks
41 error     at RegClient.<anonymous> (/home/box/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/home/box/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/home/box/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/home/box/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/home/box/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:943:16
41 error     at process._tickCallback (node.js:419:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 3.13.0-32-generic
44 error command "/home/box/local/bin/node" "/home/box/local/bin/npm" "publish"
45 error cwd /home/box/CodeRepo/codelab/js/stacks
46 error node -v v0.10.32
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
